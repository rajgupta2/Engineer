Express project structure=>
📂 config
📂 node_modules
📂 public
 📂 css
  📜 main.css
📂 views
 🌍 about.ejs
 🌍 index.ejs
 📂 layouts
  🌍 full-width.ejs
  🌍 sidebar.ejs
 📂 partials
  🌍 header.ejs
  🌍 footer.ejs
📜 README.md
🌍 app.js
📜 package-lock.json
📜 package-json

The config folder will be used for storing configuration settings for our application. 
     For our project, we'll be storing our environment variables and configuration for passport.js in this folder.
The models folder will be used for storing our Mongoose models. These models will contain the schema for our data and will be the entry point for how our data gets in and out of MongoDB.
The public folder is used for storing static files to be served, such as HTML, CSS, and Javascript files. Since we're only concerned about building an API, this folder won't be used in this tutorial, but if you build a client application for this project later it can live in this folder.
The routes folder is where we define the routes that our application will respond to and will contain the logic for our endpoints.
app.js is the entry point into our application. This is the file that node will execute and will bring together all parts of our application (routes, models, etc.).
The package.json file is used by npm for declaring our dependencies and scripts for our application. You can read more about the different configuration options that can go into package.json here



EJS=>embedded javascript template
EJS Tags=>
<% 'Scriptlet' tag, for control-flow, no output
<%= Outputs the value into the template (HTML escaped)
<%# Comment tag, no execution, no output